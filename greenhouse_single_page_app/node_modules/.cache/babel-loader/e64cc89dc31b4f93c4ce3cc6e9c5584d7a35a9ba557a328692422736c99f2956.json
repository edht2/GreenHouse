{"ast":null,"code":"import { renderSlot as _renderSlot, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"button\", {\n    class: _normalizeClass([\"actuator-button\", $options.colorClass]),\n    onMouseover: _cache[0] || (_cache[0] = $event => $data.isHovered = true),\n    onMouseleave: _cache[1] || (_cache[1] = $event => $data.isHovered = false)\n  }, [_renderSlot(_ctx.$slots, \"default\", {}, undefined, true)], 34 /* CLASS, NEED_HYDRATION */);\n}","map":{"version":3,"names":["_createElementBlock","class","_normalizeClass","$options","colorClass","onMouseover","_cache","$event","$data","isHovered","onMouseleave","_renderSlot","_ctx","$slots","undefined"],"sources":["/home/alex/dev/GreenHouse/greenhouse_single_page_app/src/components/UI/ActuatorButton.vue"],"sourcesContent":["<template>\n    <button\n      class=\"actuator-button\"\n      :class=\"colorClass\"\n      @mouseover=\"isHovered = true\"\n      @mouseleave=\"isHovered = false\"\n    >\n      <slot></slot>\n    </button>\n  </template>\n  \n  <script>\n  export default {\n    props: {\n      color: {\n        type: String,\n        validator: (value) => ['blue', 'red'].includes(value),\n        default: 'blue',\n      },\n    },\n    data() {\n      return {\n        isHovered: false,\n      };\n    },\n    computed: {\n      colorClass() {\n        if (this.color === 'blue') {\n          return this.isHovered ? 'blue-dark' : 'blue-light';\n        } else if (this.color === 'red') {\n          return this.isHovered ? 'red-dark' : 'red-light';\n        }\n        return 'blue-light'; // Default if prop is invalid\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .actuator-button {\n    padding: 0.75rem 1.5rem;\n    font: inherit;\n    color: white;\n    cursor: pointer;\n    border: none;\n    margin-right: 0.5rem;\n    display: inline-block;\n    padding: 8px 16px; /* Example padding */\n    border-radius: 4px; /* Example border-radius */\n    cursor: pointer;\n    font-size: 1em;\n\n  /* Add vertical and horizontal margins here */\n  margin: 10px 5px; /* 10px vertical, 5px horizontal */\n  }\n  \n  .blue-light {\n    background-color: #2196f3; /* Light blue */\n  }\n  \n  .blue-dark {\n    background-color: #1976d2; /* Dark blue */\n  }\n  \n  .red-light {\n    background-color: #f44336; /* Light red */\n  }\n  \n  .red-dark {\n    background-color: #d32f2f; /* Dark red */\n  }\n  \n  .actuator-button:focus {\n    outline: none; /* Optional: remove default focus outline */\n    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5); /* Optional: custom focus style */\n  }\n  </style>"],"mappings":";;uBACIA,mBAAA,CAOS;IANPC,KAAK,EAFXC,eAAA,EAEY,iBAAiB,EACfC,QAAA,CAAAC,UAAU;IACjBC,WAAS,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,KAAA,CAAAC,SAAS;IACpBC,YAAU,EAAAJ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,KAAA,CAAAC,SAAS;MAEtBE,WAAA,CAAaC,IAAA,CAAAC,MAAA,iBAAAC,SAAA,Q","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}