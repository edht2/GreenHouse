{"ast":null,"code":"import { computed } from 'vue';\nexport default {\n  name: 'PingIndicator',\n  props: {\n    successfulPings: {\n      type: Number,\n      required: true\n    },\n    totalExpectedPings: {\n      type: Number,\n      required: true\n    }\n  },\n  computed: {\n    pingPercentage() {\n      if (this.totalExpectedPings === 0) {\n        return 0;\n      }\n      return this.successfulPings / this.totalExpectedPings * 100;\n    },\n    redPercentage() {\n      const threshold = 0.85; // 85%\n      return Math.max(0, Math.min(100, threshold * 100 - this.pingPercentage));\n    },\n    orangePercentage() {\n      const startThreshold = 0.90; // 90%\n      const endThreshold = 0.95; // 95%\n      const start = startThreshold * 100;\n      const end = endThreshold * 100;\n      if (this.pingPercentage >= start && this.pingPercentage <= end) {\n        return end - this.pingPercentage;\n      } else if (this.pingPercentage < start) {\n        return end - start;\n      } else {\n        return 0;\n      }\n    },\n    greenPercentage() {\n      return Math.max(0, this.pingPercentage - 0.95 * 100);\n    }\n  }\n};","map":{"version":3,"names":["computed","name","props","successfulPings","type","Number","required","totalExpectedPings","pingPercentage","redPercentage","threshold","Math","max","min","orangePercentage","startThreshold","endThreshold","start","end","greenPercentage"],"sources":["/home/alex/dev/GreenHouse/greenhouse_single_page_app/src/components/UI/SensorFreqGauge.vue"],"sourcesContent":["<template>\n    <div class=\"ping-indicator\">\n      <div\n        class=\"segment segment-red\"\n        :style=\"{ width: redPercentage + '%' }\"\n      ></div>\n      <div\n        class=\"segment segment-orange\"\n        :style=\"{ marginLeft: redPercentage + '%' }\"\n      ></div>\n      <div\n        class=\"segment segment-green\"\n        :style=\"{ marginLeft: redPercentage + orangePercentage + '%' }\"\n      ></div>\n    </div>\n  </template>\n  \n  <script>\n  import { computed } from 'vue';\n  \n  export default {\n    name: 'PingIndicator',\n    props: {\n      successfulPings: {\n        type: Number,\n        required: true,\n      },\n      totalExpectedPings: {\n        type: Number,\n        required: true,\n      },\n    },\n    computed: {\n      pingPercentage() {\n        if (this.totalExpectedPings === 0) {\n          return 0;\n        }\n        return (this.successfulPings / this.totalExpectedPings) * 100;\n      },\n      redPercentage() {\n          const threshold = 0.85; // 85%\n          return Math.max(0, Math.min(100, (threshold * 100) - this.pingPercentage));\n      },\n      orangePercentage() {\n          const startThreshold = 0.90; // 90%\n          const endThreshold = 0.95;   // 95%\n          const start = startThreshold * 100;\n          const end = endThreshold * 100;\n  \n          if (this.pingPercentage >= start && this.pingPercentage <= end) {\n              return end - this.pingPercentage;\n          } else if (this.pingPercentage < start) {\n              return end - start;\n          } else {\n              return 0;\n          }\n      },\n      greenPercentage() {\n          return Math.max(0, this.pingPercentage - (0.95 * 100));\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .ping-indicator {\n    display: flex;\n    width: 300px; /* Adjust as needed */\n    height: 30px;  /* Adjust as needed */\n    border: 1px solid #ccc; /* Optional border */\n  }\n  \n  .segment {\n    height: 100%;\n  }\n  \n  .segment-red {\n    background-color: red;\n  }\n  \n  .segment-orange {\n    background-color: orange;\n  }\n  \n  .segment-green {\n    background-color: green;\n  }\n  </style>"],"mappings":"AAkBE,SAASA,QAAO,QAAS,KAAK;AAE9B,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,KAAK,EAAE;IACLC,eAAe,EAAE;MACfC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,kBAAkB,EAAE;MAClBH,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDN,QAAQ,EAAE;IACRQ,cAAcA,CAAA,EAAG;MACf,IAAI,IAAI,CAACD,kBAAiB,KAAM,CAAC,EAAE;QACjC,OAAO,CAAC;MACV;MACA,OAAQ,IAAI,CAACJ,eAAc,GAAI,IAAI,CAACI,kBAAkB,GAAI,GAAG;IAC/D,CAAC;IACDE,aAAaA,CAAA,EAAG;MACZ,MAAMC,SAAQ,GAAI,IAAI,EAAE;MACxB,OAAOC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,GAAG,CAAC,GAAG,EAAGH,SAAQ,GAAI,GAAG,GAAI,IAAI,CAACF,cAAc,CAAC,CAAC;IAC9E,CAAC;IACDM,gBAAgBA,CAAA,EAAG;MACf,MAAMC,cAAa,GAAI,IAAI,EAAE;MAC7B,MAAMC,YAAW,GAAI,IAAI,EAAI;MAC7B,MAAMC,KAAI,GAAIF,cAAa,GAAI,GAAG;MAClC,MAAMG,GAAE,GAAIF,YAAW,GAAI,GAAG;MAE9B,IAAI,IAAI,CAACR,cAAa,IAAKS,KAAI,IAAK,IAAI,CAACT,cAAa,IAAKU,GAAG,EAAE;QAC5D,OAAOA,GAAE,GAAI,IAAI,CAACV,cAAc;MACpC,OAAO,IAAI,IAAI,CAACA,cAAa,GAAIS,KAAK,EAAE;QACpC,OAAOC,GAAE,GAAID,KAAK;MACtB,OAAO;QACH,OAAO,CAAC;MACZ;IACJ,CAAC;IACDE,eAAeA,CAAA,EAAG;MACd,OAAOR,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,IAAI,CAACJ,cAAa,GAAK,IAAG,GAAI,GAAI,CAAC;IAC1D;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}