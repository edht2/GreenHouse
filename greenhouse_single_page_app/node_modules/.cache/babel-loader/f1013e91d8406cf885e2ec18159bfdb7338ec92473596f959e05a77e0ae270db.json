{"ast":null,"code":"export default {\n  props: {\n    modelValue: {\n      type: String,\n      default: 'closed',\n      validator: value => ['closed', 'half', 'open'].includes(value)\n    }\n  },\n  emits: ['update:modelValue'],\n  data() {\n    return {\n      positions: ['closed', 'half', 'open'],\n      currentIndex: this.positions.indexOf(this.modelValue)\n    };\n  },\n  computed: {\n    currentPositionClass() {\n      return `position-${this.positions[this.currentIndex]}`;\n    },\n    sliderPositionStyle() {\n      const baseOffset = 2; // Initial offset\n      const step = (this.containerWidth - this.sliderWidth - 2 * baseOffset) / (this.positions.length - 1);\n      const translateX = baseOffset + this.currentIndex * step;\n      return {\n        transform: `translateX(${translateX}px)`\n      };\n    },\n    containerWidth() {\n      // Dynamically get the container width after rendering\n      return this.$el?.querySelector('.switch-container')?.offsetWidth || 90; // Default width\n    },\n    sliderWidth() {\n      return this.$el?.querySelector('.slider')?.offsetWidth || 26; // Default width\n    }\n  },\n  mounted() {\n    // Ensure initial slider position is correct after rendering\n    this.$nextTick(() => {\n      this.updateSliderPosition();\n    });\n  },\n  methods: {\n    cyclePosition() {\n      this.currentIndex = (this.currentIndex + 1) % this.positions.length;\n      this.$emit('update:modelValue', this.positions[this.currentIndex]);\n      this.updateSliderPosition();\n    },\n    updateSliderPosition() {\n      // Force re-evaluation of the computed style\n      this.$forceUpdate();\n    }\n  }\n};","map":{"version":3,"names":["props","modelValue","type","String","default","validator","value","includes","emits","data","positions","currentIndex","indexOf","computed","currentPositionClass","sliderPositionStyle","baseOffset","step","containerWidth","sliderWidth","length","translateX","transform","$el","querySelector","offsetWidth","mounted","$nextTick","updateSliderPosition","methods","cyclePosition","$emit","$forceUpdate"],"sources":["/home/alex/dev/GreenHouse/greenhouse_single_page_app/src/components/UI/WindowActuatorToggle.vue"],"sourcesContent":["<template>\n    <div class=\"three-position-toggle\" @click=\"cyclePosition\">\n      <div class=\"switch-container\" :class=\"currentPositionClass\">\n        <span class=\"label closed-label\">Closed</span>\n        <div class=\"slider\" :style=\"sliderPositionStyle\"></div>\n        <span class=\"label half-label\">Half</span>\n        <span class=\"label open-label\">Open</span>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    props: {\n      modelValue: {\n        type: String,\n        default: 'closed',\n        validator: (value) => ['closed', 'half', 'open'].includes(value),\n      },\n    },\n    emits: ['update:modelValue'],\n    data() {\n      return {\n        positions: ['closed', 'half', 'open'],\n        currentIndex: this.positions.indexOf(this.modelValue),\n      };\n    },\n    computed: {\n      currentPositionClass() {\n        return `position-${this.positions[this.currentIndex]}`;\n      },\n      sliderPositionStyle() {\n        const baseOffset = 2; // Initial offset\n        const step = (this.containerWidth - this.sliderWidth - 2 * baseOffset) / (this.positions.length - 1);\n        const translateX = baseOffset + this.currentIndex * step;\n        return { transform: `translateX(${translateX}px)` };\n      },\n      containerWidth() {\n        // Dynamically get the container width after rendering\n        return this.$el?.querySelector('.switch-container')?.offsetWidth || 90; // Default width\n      },\n      sliderWidth() {\n        return this.$el?.querySelector('.slider')?.offsetWidth || 26; // Default width\n      },\n    },\n    mounted() {\n      // Ensure initial slider position is correct after rendering\n      this.$nextTick(() => {\n        this.updateSliderPosition();\n      });\n    },\n    methods: {\n      cyclePosition() {\n        this.currentIndex = (this.currentIndex + 1) % this.positions.length;\n        this.$emit('update:modelValue', this.positions[this.currentIndex]);\n        this.updateSliderPosition();\n      },\n      updateSliderPosition() {\n        // Force re-evaluation of the computed style\n        this.$forceUpdate();\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .three-position-toggle {\n    display: inline-block;\n    cursor: pointer;\n  }\n  \n  .switch-container {\n    position: relative;\n    width: 90px; /* Adjust as needed */\n    height: 30px; /* Adjust as needed */\n    background-color: #ccc;\n    border-radius: 15px;\n    overflow: hidden;\n    transition: background-color 0.3s ease;\n  }\n  \n  .position-closed {\n    background-color: #f44336; /* Red for \"Closed\" */\n  }\n  \n  .position-half {\n    background-color: #800080; /* Purple for \"Half\" */\n  }\n  \n  .position-open {\n    background-color: #2196f3; /* Blue for \"Open\" */\n  }\n  \n  .label {\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    color: #fff;\n    font-size: 0.7em;\n    font-weight: bold;\n    user-select: none;\n    white-space: nowrap;\n  }\n  \n  .closed-label {\n    left: 5px;\n  }\n  \n  .half-label {\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n  \n  .open-label {\n    right: 5px;\n  }\n  \n  .slider {\n    position: absolute;\n    top: 2px;\n    left: 2px;\n    width: 26px; /* Adjust as needed */\n    height: 26px; /* Adjust as needed */\n    background-color: #fff;\n    border-radius: 50%;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\n    transition: transform 0.3s ease;\n  }\n  \n  /* Dynamic slider positioning based on computed style */\n  </style>"],"mappings":"AAYE,eAAe;EACbA,KAAK,EAAE;IACLC,UAAU,EAAE;MACVC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE,QAAQ;MACjBC,SAAS,EAAGC,KAAK,IAAK,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,CAACC,QAAQ,CAACD,KAAK;IACjE;EACF,CAAC;EACDE,KAAK,EAAE,CAAC,mBAAmB,CAAC;EAC5BC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC;MACrCC,YAAY,EAAE,IAAI,CAACD,SAAS,CAACE,OAAO,CAAC,IAAI,CAACX,UAAU;IACtD,CAAC;EACH,CAAC;EACDY,QAAQ,EAAE;IACRC,oBAAoBA,CAAA,EAAG;MACrB,OAAO,YAAY,IAAI,CAACJ,SAAS,CAAC,IAAI,CAACC,YAAY,CAAC,EAAE;IACxD,CAAC;IACDI,mBAAmBA,CAAA,EAAG;MACpB,MAAMC,UAAS,GAAI,CAAC,EAAE;MACtB,MAAMC,IAAG,GAAI,CAAC,IAAI,CAACC,cAAa,GAAI,IAAI,CAACC,WAAU,GAAI,IAAIH,UAAU,KAAK,IAAI,CAACN,SAAS,CAACU,MAAK,GAAI,CAAC,CAAC;MACpG,MAAMC,UAAS,GAAIL,UAAS,GAAI,IAAI,CAACL,YAAW,GAAIM,IAAI;MACxD,OAAO;QAAEK,SAAS,EAAE,cAAcD,UAAU;MAAM,CAAC;IACrD,CAAC;IACDH,cAAcA,CAAA,EAAG;MACf;MACA,OAAO,IAAI,CAACK,GAAG,EAAEC,aAAa,CAAC,mBAAmB,CAAC,EAAEC,WAAU,IAAK,EAAE,EAAE;IAC1E,CAAC;IACDN,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACI,GAAG,EAAEC,aAAa,CAAC,SAAS,CAAC,EAAEC,WAAU,IAAK,EAAE,EAAE;IAChE;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACC,SAAS,CAAC,MAAM;MACnB,IAAI,CAACC,oBAAoB,CAAC,CAAC;IAC7B,CAAC,CAAC;EACJ,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAAA,EAAG;MACd,IAAI,CAACnB,YAAW,GAAI,CAAC,IAAI,CAACA,YAAW,GAAI,CAAC,IAAI,IAAI,CAACD,SAAS,CAACU,MAAM;MACnE,IAAI,CAACW,KAAK,CAAC,mBAAmB,EAAE,IAAI,CAACrB,SAAS,CAAC,IAAI,CAACC,YAAY,CAAC,CAAC;MAClE,IAAI,CAACiB,oBAAoB,CAAC,CAAC;IAC7B,CAAC;IACDA,oBAAoBA,CAAA,EAAG;MACrB;MACA,IAAI,CAACI,YAAY,CAAC,CAAC;IACrB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}