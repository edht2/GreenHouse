{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_sensor_icon = _resolveComponent(\"sensor-icon\");\n  const _component_base_button = _resolveComponent(\"base-button\");\n  const _component_base_card = _resolveComponent(\"base-card\");\n  const _component_sensor_freq_gauge = _resolveComponent(\"sensor-freq-gauge\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_base_card, null, {\n    default: _withCtx(() => [_createElementVNode(\"h3\", null, [_createVNode(_component_base_button, null, {\n      default: _withCtx(() => [_createVNode(_component_sensor_icon, {\n        iconwidth: \"20\",\n        class: \"icon\"\n      }), _cache[0] || (_cache[0] = _createTextVNode(\"Sensor Health Check\"))]),\n      _: 1 /* STABLE */\n    })]), _createVNode(_component_base_card, null, {\n      default: _withCtx(() => _cache[1] || (_cache[1] = [_createElementVNode(\"p\", null, \" We have 10 sensors attached to two Raspberry pi's in the greenhouse detecting 14 variables. Climate zone 1 has 3 soil moisture sensors, CO², relative humidity and air temperature sensors. \", -1 /* HOISTED */), _createElementVNode(\"br\", null, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"Climate zone 2 has 5 soil moisture sensors, CO², relative humidity and air temperature.\", -1 /* HOISTED */), _createElementVNode(\"br\", null, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"One additional sensor is attached directly to the controller pi in the boiler room which senses barometric pressure.\", -1 /* HOISTED */)])),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_base_card, null, {\n    default: _withCtx(() => [_cache[2] || (_cache[2] = _createElementVNode(\"h3\", null, \"Sensor Data Pull Frequency\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.sensors, sensor => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: sensor.id,\n        class: \"sensor-item\"\n      }, [_createElementVNode(\"p\", null, _toDisplayString(sensor.title), 1 /* TEXT */), _createVNode(_component_sensor_freq_gauge, {\n        \"successful-pings\": sensor.dataPulled,\n        \"total-expected-pings\": sensor.dataExpected\n      }, null, 8 /* PROPS */, [\"successful-pings\", \"total-expected-pings\"]), _createElementVNode(\"p\", null, _toDisplayString($options.calculateDataPullPercentage(sensor.dataPulled, sensor.dataExpected)) + \"% data received\", 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_base_card","default","_withCtx","_createElementVNode","_component_base_button","_component_sensor_icon","iconwidth","class","_createTextVNode","_","_cache","_Fragment","_renderList","$data","sensors","sensor","key","id","_toDisplayString","title","_component_sensor_freq_gauge","dataPulled","dataExpected","$options","calculateDataPullPercentage"],"sources":["/home/alex/dev/GreenHouse/greenhouse_single_page_app/src/pages/greenhouse/SensorStatus.vue"],"sourcesContent":["<template>\n    <div>\n      <base-card>\n        <h3>\n          <base-button><sensor-icon iconwidth=\"20\" class=\"icon\"></sensor-icon>Sensor Health Check</base-button>\n        </h3>\n        <base-card>\n          <p>\n            We have 10 sensors attached to two Raspberry pi's in the greenhouse detecting 14 variables. Climate zone 1 has 3 soil moisture sensors, CO², relative humidity and air temperature sensors.\n          </p>\n          <br />\n          <p>Climate zone 2 has 5 soil moisture sensors, CO², relative humidity and air temperature.</p>\n          <br />\n          <p>One additional sensor is attached directly to the controller pi in the boiler room which senses barometric pressure.</p>\n        </base-card>\n      </base-card>\n      <base-card>\n        <h3>Sensor Data Pull Frequency</h3>\n        <div v-for=\"sensor in sensors\" :key=\"sensor.id\" class=\"sensor-item\">\n          <p>{{ sensor.title }}</p>\n          <sensor-freq-gauge\n            :successful-pings=\"sensor.dataPulled\"\n            :total-expected-pings=\"sensor.dataExpected\"\n          >\n        </sensor-freq-gauge>\n          <p>{{ calculateDataPullPercentage(sensor.dataPulled, sensor.dataExpected) }}% data received</p>\n        </div>\n      </base-card>\n    </div>\n  </template>\n  \n  <script>\n  import SensorFreqGauge from '@/components/UI/SensorFreqGauge.vue';\n\n  \n  export default {\n    components: { SensorFreqGauge }, // Register the PingIndicator\n    data() {\n      return {\n        sensors: [\n          {\n            id: 'soil-moisture-1',\n            title: 'Soil Moisture - Bed 1',\n            dataPulled: 2160, // Example values\n            dataExpected: 2880,\n            currentValue: null,\n            expectedRange: { min: 10, max: 90 },\n            inRange: true,\n          },\n          {\n            id: 'soil-moisture-2',\n            title: 'Soil Moisture - Bed 2',\n            dataPulled: 2736, // Example values\n            dataExpected: 2880,\n            currentValue: null,\n            expectedRange: { min: 10, max: 90 },\n            inRange: true,\n          },\n          {\n            id: 'soil-moisture-3',\n            title: 'Soil Moisture - Bed 3',\n            dataPulled: 2800, // Example values\n            dataExpected: 2880,\n            currentValue: null,\n            expectedRange: { min: 10, max: 90 },\n            inRange: true,\n          },\n          {\n            id: 'soil-moisture-4',\n            title: 'Soil Moisture - Bed 4',\n            dataPulled: 2592, // Example values\n            dataExpected: 2880,\n            currentValue: null,\n            expectedRange: { min: 10, max: 90 },\n            inRange: true,\n          },\n          {\n            id: 'soil-moisture-5',\n            title: 'Soil Moisture - Bed 5',\n            dataPulled: 2016, // Example values\n            dataExpected: 2880,\n            currentValue: null,\n            expectedRange: { min: 10, max: 90 },\n            inRange: true,\n          },\n          {\n            id: 'soil-moisture-6',\n            title: 'Soil Moisture - Bed 6',\n            dataPulled: 2784, // Example values\n            dataExpected: 2880,\n            currentValue: null,\n            expectedRange: { min: 10, max: 90 },\n            inRange: true,\n          },\n          {\n            id: 'soil-moisture-7',\n            title: 'Soil Moisture - Bed 7',\n            dataPulled: 2880, // Example values\n            dataExpected: 2880,\n            currentValue: null,\n            expectedRange: { min: 10, max: 90 },\n            inRange: true,\n          },\n          {\n            id: 'soil-moisture-8',\n            title: 'Soil Moisture - Bed 8',\n            dataPulled: 2669, // Example values\n            dataExpected: 2880,\n            currentValue: null,\n            expectedRange: { min: 10, max: 90 },\n            inRange: true,\n          },\n          {\n            id: 'relative-humidity-1',\n            title: 'Relative Humidity Sensor 1',\n            dataPulled: 2851, // Example values\n            dataExpected: 2880,\n            currentValue: null,\n            expectedRange: { min: 30, max: 90 },\n            inRange: true,\n          },\n          {\n            id: 'relative-humidity-2',\n            title: 'Relative Humidity Sensor 2',\n            dataPulled: 2707, // Example values\n            dataExpected: 2880,\n            currentValue: null,\n            expectedRange: { min: 35, max: 85 },\n            inRange: true,\n          },\n          {\n            id: 'co2-sensor-1',\n            title: 'CO₂ Sensor 1',\n            dataPulled: 2534, // Example values\n            dataExpected: 2880,\n            currentValue: null,\n            expectedRange: { min: 400, max: 1000 },\n            inRange: true,\n          },\n          {\n            id: 'co2-sensor-2',\n            title: 'CO₂ Sensor 2',\n            dataPulled: 2880, // Example values\n            dataExpected: 2880,\n            currentValue: null,\n            expectedRange: { min: 400, max: 950 },\n            inRange: true,\n          },\n          {\n            id: 'temperature-sensor-1',\n            title: 'Temperature Sensor 1',\n            dataPulled: 2693, // Example values\n            dataExpected: 2880,\n            currentValue: null,\n            expectedRange: { min: 1, max: 30 },\n            inRange: true,\n          },\n          {\n            id: 'temperature-sensor-2',\n            title: 'Temperature Sensor 2',\n            dataPulled: 2880, // Example values\n            dataExpected: 2880,\n            currentValue: null,\n            expectedRange: { min: 18, max: 27 },\n            inRange: true,\n          },\n        ],\n        dataPullThresholdPercentage: 90,\n      };\n    },\n    methods: {\n      calculateDataPullPercentage(pulled, expected) {\n        if (expected === 0) {\n          return 0;\n        }\n        return Math.round((pulled / expected) * 100);\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .icon {\n    margin-right: 10px;\n  }\n  \n  .sensor-item {\n    margin-bottom: 20px;\n  }\n  \n  .sensor-item p {\n    margin-bottom: 5px;\n  }\n  </style>"],"mappings":";;;;;;uBACIA,mBAAA,CA2BM,cA1BJC,YAAA,CAaYC,oBAAA;IAflBC,OAAA,EAAAC,QAAA,CAGQ,MAEK,CAFLC,mBAAA,CAEK,aADHJ,YAAA,CAAqGK,sBAAA;MAJ/GH,OAAA,EAAAC,QAAA,CAIuB,MAAuD,CAAvDH,YAAA,CAAuDM,sBAAA;QAA1CC,SAAS,EAAC,IAAI;QAACC,KAAK,EAAC;oCAJzDC,gBAAA,CAI8E,qBAAmB,G;MAJjGC,CAAA;UAMQV,YAAA,CAQYC,oBAAA;MAdpBC,OAAA,EAAAC,QAAA,CAOU,MAEIQ,MAAA,QAAAA,MAAA,OAFJP,mBAAA,CAEI,WAFD,+LAEH,qBACAA,mBAAA,CAAM,qCACNA,mBAAA,CAA8F,WAA3F,yFAAuF,qBAC1FA,mBAAA,CAAM,qCACNA,mBAAA,CAA2H,WAAxH,sHAAoH,oB;MAbjIM,CAAA;;IAAAA,CAAA;MAgBMV,YAAA,CAWYC,oBAAA;IA3BlBC,OAAA,EAAAC,QAAA,CAiBQ,MAAmC,C,0BAAnCC,mBAAA,CAAmC,YAA/B,4BAA0B,uB,kBAC9BL,mBAAA,CAQMa,SAAA,QA1BdC,WAAA,CAkB8BC,KAAA,CAAAC,OAAO,EAAjBC,MAAM;2BAAlBjB,mBAAA,CAQM;QAR0BkB,GAAG,EAAED,MAAM,CAACE,EAAE;QAAEV,KAAK,EAAC;UACpDJ,mBAAA,CAAyB,WAAAe,gBAAA,CAAnBH,MAAM,CAACI,KAAK,kBAClBpB,YAAA,CAIkBqB,4BAAA;QAHf,kBAAgB,EAAEL,MAAM,CAACM,UAAU;QACnC,sBAAoB,EAAEN,MAAM,CAACO;6EAGhCnB,mBAAA,CAA+F,WAAAe,gBAAA,CAAzFK,QAAA,CAAAC,2BAA2B,CAACT,MAAM,CAACM,UAAU,EAAEN,MAAM,CAACO,YAAY,KAAI,iBAAe,gB;;IAzBrGb,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}