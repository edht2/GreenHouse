{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Cookies from 'js-cookie'; // If you're using js-cookie\n\nexport default {\n  loginUser({\n    commit\n  }, userData) {\n    commit('setGreenhouseUser', userData);\n  },\n  async logoutUser({\n    commit,\n    $router\n  }) {\n    // Receive $router from the context\n    try {\n      const response = await fetch('http://192.168.1.228:5000/logout', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include' // Crucial line for sending cookies\n      });\n      if (response.ok) {\n        console.log('Logout successful on the server (optional)');\n      } else {\n        console.error('Error during server-side logout (optional)');\n        // Handle potential errors from the server\n      }\n    } catch (error) {\n      console.error('Error during logout API call:', error);\n      // Handle network errors or other issues\n    } finally {\n      // Clear the JWT cookie\n      Cookies.remove('jwt_token', {\n        path: '/'\n      }); // Replace 'your_jwt_cookie_name' with the actual name of your JWT cookie\n\n      // Clear the user data in Vuex state\n      commit('clearGreenhouseUser');\n      console.log('Full router object in logout action:', $router);\n      if ($router) {\n        $router.push('/login');\n      } else {\n        console.error('Router instance STILL not found in store!');\n      }\n    }\n  }\n};","map":{"version":3,"names":["Cookies","loginUser","commit","userData","logoutUser","$router","response","fetch","method","headers","credentials","ok","console","log","error","remove","path","push"],"sources":["/home/alex/dev/GreenHouse/greenhouse_single_page_app/src/store/authenticate/actions.js"],"sourcesContent":["import Cookies from 'js-cookie'; // If you're using js-cookie\n\nexport default {\n    loginUser({ commit }, userData) {\n        commit('setGreenhouseUser', userData);\n    },\n    async logoutUser({ commit, $router }) { // Receive $router from the context\n        try {\n            const response = await fetch('http://192.168.1.228:5000/logout', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                credentials: 'include', // Crucial line for sending cookies\n            });\n\n            if (response.ok) {\n                console.log('Logout successful on the server (optional)');\n            } else {\n                console.error('Error during server-side logout (optional)');\n                // Handle potential errors from the server\n            }\n        } catch (error) {\n            console.error('Error during logout API call:', error);\n            // Handle network errors or other issues\n        } finally {\n            // Clear the JWT cookie\n            Cookies.remove('jwt_token', { path: '/' }); // Replace 'your_jwt_cookie_name' with the actual name of your JWT cookie\n\n            // Clear the user data in Vuex state\n            commit('clearGreenhouseUser');\n            console.log('Full router object in logout action:', $router);\n            if ($router) {\n                $router.push('/login');\n            } else {\n                console.error('Router instance STILL not found in store!');\n            }\n        }\n    },\n};"],"mappings":";AAAA,OAAOA,OAAO,MAAM,WAAW,CAAC,CAAC;;AAEjC,eAAe;EACXC,SAASA,CAAC;IAAEC;EAAO,CAAC,EAAEC,QAAQ,EAAE;IAC5BD,MAAM,CAAC,mBAAmB,EAAEC,QAAQ,CAAC;EACzC,CAAC;EACD,MAAMC,UAAUA,CAAC;IAAEF,MAAM;IAAEG;EAAQ,CAAC,EAAE;IAAE;IACpC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,WAAW,EAAE,SAAS,CAAE;MAC5B,CAAC,CAAC;MAEF,IAAIJ,QAAQ,CAACK,EAAE,EAAE;QACbC,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;MAC7D,CAAC,MAAM;QACHD,OAAO,CAACE,KAAK,CAAC,4CAA4C,CAAC;QAC3D;MACJ;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD;IACJ,CAAC,SAAS;MACN;MACAd,OAAO,CAACe,MAAM,CAAC,WAAW,EAAE;QAAEC,IAAI,EAAE;MAAI,CAAC,CAAC,CAAC,CAAC;;MAE5C;MACAd,MAAM,CAAC,qBAAqB,CAAC;MAC7BU,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAER,OAAO,CAAC;MAC5D,IAAIA,OAAO,EAAE;QACTA,OAAO,CAACY,IAAI,CAAC,QAAQ,CAAC;MAC1B,CAAC,MAAM;QACHL,OAAO,CAACE,KAAK,CAAC,2CAA2C,CAAC;MAC9D;IACJ;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}