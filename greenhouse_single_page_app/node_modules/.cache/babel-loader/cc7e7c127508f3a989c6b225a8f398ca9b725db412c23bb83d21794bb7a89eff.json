{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  loginUser({\n    commit\n  }, userData) {\n    commit('setGreenhouseUser', userData);\n  },\n  logoutUser({\n    commit\n  }) {\n    commit('clearGreenhouseUser');\n  },\n  async logoutUser({\n    commit\n  }) {\n    try {\n      // Optional: Call your Flask server's logout endpoint\n      const response = await fetch('/api/logout', {\n        // Adjust the endpoint as needed\n        method: 'POST'\n        // You might need to include headers or credentials if your server expects them\n      });\n      if (response.ok) {\n        console.log('Logout successful on the server (optional)');\n      } else {\n        console.error('Error during server-side logout (optional)');\n        // Handle potential errors from the server\n      }\n    } catch (error) {\n      console.error('Error during logout API call:', error);\n      // Handle network errors or other issues\n    } finally {\n      // Clear the JWT cookie\n      Cookies.remove('your_jwt_cookie_name', {\n        path: '/'\n      }); // Replace 'your_jwt_cookie_name' with the actual name of your JWT cookie\n\n      // Clear the user data in Vuex state\n      commit('clearGreenhouseUser');\n\n      // Redirect the user to the login page\n      router.push('/login'); // Adjust the route as needed\n    }\n  }\n};","map":{"version":3,"names":["loginUser","commit","userData","logoutUser","response","fetch","method","ok","console","log","error","Cookies","remove","path","router","push"],"sources":["/home/alex/dev/GreenHouse/greenhouse_single_page_app/src/store/authenticate/actions.js"],"sourcesContent":["export default {\n    loginUser({ commit }, userData) {\n        commit('setGreenhouseUser', userData);\n    },\n    logoutUser({commit}){\n        commit('clearGreenhouseUser');\n    },\n    async logoutUser({ commit }) {\n        try {\n          // Optional: Call your Flask server's logout endpoint\n          const response = await fetch('/api/logout', { // Adjust the endpoint as needed\n            method: 'POST',\n            // You might need to include headers or credentials if your server expects them\n          });\n    \n          if (response.ok) {\n            console.log('Logout successful on the server (optional)');\n          } else {\n            console.error('Error during server-side logout (optional)');\n            // Handle potential errors from the server\n          }\n        } catch (error) {\n          console.error('Error during logout API call:', error);\n          // Handle network errors or other issues\n        } finally {\n          // Clear the JWT cookie\n          Cookies.remove('your_jwt_cookie_name', { path: '/' }); // Replace 'your_jwt_cookie_name' with the actual name of your JWT cookie\n    \n          // Clear the user data in Vuex state\n          commit('clearGreenhouseUser');\n    \n          // Redirect the user to the login page\n          router.push('/login'); // Adjust the route as needed\n        }\n      },\n};"],"mappings":";AAAA,eAAe;EACXA,SAASA,CAAC;IAAEC;EAAO,CAAC,EAAEC,QAAQ,EAAE;IAC5BD,MAAM,CAAC,mBAAmB,EAAEC,QAAQ,CAAC;EACzC,CAAC;EACDC,UAAUA,CAAC;IAACF;EAAM,CAAC,EAAC;IAChBA,MAAM,CAAC,qBAAqB,CAAC;EACjC,CAAC;EACD,MAAME,UAAUA,CAAC;IAAEF;EAAO,CAAC,EAAE;IACzB,IAAI;MACF;MACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;QAAE;QAC5CC,MAAM,EAAE;QACR;MACF,CAAC,CAAC;MAEF,IAAIF,QAAQ,CAACG,EAAE,EAAE;QACfC,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;MAC3D,CAAC,MAAM;QACLD,OAAO,CAACE,KAAK,CAAC,4CAA4C,CAAC;QAC3D;MACF;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC,SAAS;MACR;MACAC,OAAO,CAACC,MAAM,CAAC,sBAAsB,EAAE;QAAEC,IAAI,EAAE;MAAI,CAAC,CAAC,CAAC,CAAC;;MAEvD;MACAZ,MAAM,CAAC,qBAAqB,CAAC;;MAE7B;MACAa,MAAM,CAACC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IACzB;EACF;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}