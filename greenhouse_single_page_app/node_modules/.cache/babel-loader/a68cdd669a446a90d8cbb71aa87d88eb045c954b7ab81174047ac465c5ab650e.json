{"ast":null,"code":"export default {\n  props: {\n    color: {\n      type: String,\n      validator: value => ['blue', 'red'].includes(value),\n      default: 'blue'\n    }\n  },\n  data() {\n    return {\n      isHovered: false\n    };\n  },\n  computed: {\n    colorClass() {\n      if (this.color === 'blue') {\n        return this.isHovered ? 'blue-dark' : 'blue-light';\n      } else if (this.color === 'red') {\n        return this.isHovered ? 'red-dark' : 'red-light';\n      }\n      return 'blue-light'; // Default if prop is invalid\n    }\n  }\n};","map":{"version":3,"names":["props","color","type","String","validator","value","includes","default","data","isHovered","computed","colorClass"],"sources":["/home/alex/dev/GreenHouse/greenhouse_single_page_app/src/components/UI/ActuatorButton.vue"],"sourcesContent":["<template>\n    <button\n      class=\"actuator-button\"\n      :class=\"colorClass\"\n      @mouseover=\"isHovered = true\"\n      @mouseleave=\"isHovered = false\"\n    >\n      <slot></slot>\n    </button>\n  </template>\n  \n  <script>\n  export default {\n    props: {\n      color: {\n        type: String,\n        validator: (value) => ['blue', 'red'].includes(value),\n        default: 'blue',\n      },\n    },\n    data() {\n      return {\n        isHovered: false,\n      };\n    },\n    computed: {\n      colorClass() {\n        if (this.color === 'blue') {\n          return this.isHovered ? 'blue-dark' : 'blue-light';\n        } else if (this.color === 'red') {\n          return this.isHovered ? 'red-dark' : 'red-light';\n        }\n        return 'blue-light'; // Default if prop is invalid\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .actuator-button {\n    padding: 0.75rem 1.5rem;\n    font: inherit;\n    color: white;\n    cursor: pointer;\n    border: none;\n    border-radius: 30px;\n    margin-right: 0.5rem;\n    display: inline-block;\n    \n  }\n  \n  .blue-light {\n    background-color: #2196f3; /* Light blue */\n  }\n  \n  .blue-dark {\n    background-color: #1976d2; /* Dark blue */\n  }\n  \n  .red-light {\n    background-color: #f44336; /* Light red */\n  }\n  \n  .red-dark {\n    background-color: #d32f2f; /* Dark red */\n  }\n  \n  .actuator-button:focus {\n    outline: none; /* Optional: remove default focus outline */\n    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5); /* Optional: custom focus style */\n  }\n  </style>"],"mappings":"AAYE,eAAe;EACbA,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,MAAM;MACZC,SAAS,EAAGC,KAAK,IAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAACC,QAAQ,CAACD,KAAK,CAAC;MACrDE,OAAO,EAAE;IACX;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACX,IAAI,IAAI,CAACV,KAAI,KAAM,MAAM,EAAE;QACzB,OAAO,IAAI,CAACQ,SAAQ,GAAI,WAAU,GAAI,YAAY;MACpD,OAAO,IAAI,IAAI,CAACR,KAAI,KAAM,KAAK,EAAE;QAC/B,OAAO,IAAI,CAACQ,SAAQ,GAAI,UAAS,GAAI,WAAW;MAClD;MACA,OAAO,YAAY,EAAE;IACvB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}