{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Cookies from 'js-cookie';\nexport default {\n  loginUser({\n    commit\n  }, userData) {\n    commit('setGreenhouseUser', userData);\n    console.log('User data stored in Vuex after login:', userData);\n    console.log('First Name:', userData.first_name);\n    console.log('Last Name:', userData.last_name);\n    console.log('Role:', userData.role);\n  },\n  async logoutUser({\n    commit\n  }, router) {\n    // Receive the router instance as the second argument\n    try {\n      const response = await fetch('http://192.168.1.228:5000/logout', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      if (response.ok) {\n        console.log('Logout successful on the server (optional)');\n      } else {\n        console.error('Error during server-side logout (optional)');\n      }\n    } catch (error) {\n      console.error('Error during logout API call:', error);\n    } finally {\n      console.log('logoutUser: About to remove jwt_token cookie');\n      Cookies.remove('jwt_token', {\n        path: '/'\n      });\n      console.log('logoutUser: jwt_token cookie removed');\n      commit('clearGreenhouseUser');\n      router.push('/login');\n    }\n  },\n  async loadUserFromToken({\n    commit\n  }) {\n    console.log('loadUserFromToken action is executing!');\n    const token = Cookies.get('jwt_token');\n    console.log('loadUserFromToken: jwt_token cookie value:', token);\n    if (token) {\n      try {\n        const response = await fetch('http://192.168.1.228:5000/verify-token', {\n          method: 'POST',\n          credentials: 'include'\n        });\n        if (response.ok) {\n          const userData = await response.json();\n          console.log('User data from /verify-token:', userData);\n          commit('setGreenhouseUser', userData);\n        } else {\n          Cookies.remove('jwt_token', {\n            path: '/'\n          }); // Remove invalid token\n          commit('clearGreenhouseUser');\n          console.log('Token verification failed');\n        }\n      } catch (error) {\n        console.error('Error verifying token:', error);\n        Cookies.remove('jwt_token', {\n          path: '/'\n        }); // Remove on error\n        commit('clearGreenhouseUser');\n      }\n    } else {\n      console.log('jwt_token cookie not found');\n    }\n  }\n};","map":{"version":3,"names":["Cookies","loginUser","commit","userData","console","log","first_name","last_name","role","logoutUser","router","response","fetch","method","headers","credentials","ok","error","remove","path","push","loadUserFromToken","token","get","json"],"sources":["/home/alex/dev/GreenHouse/greenhouse_single_page_app/src/store/authenticate/actions.js"],"sourcesContent":["import Cookies from 'js-cookie';\n\nexport default {\n    loginUser({ commit }, userData) {\n        commit('setGreenhouseUser', userData);\n        console.log('User data stored in Vuex after login:', userData);\n        console.log('First Name:', userData.first_name);\n        console.log('Last Name:', userData.last_name);\n        console.log('Role:', userData.role);\n    },\n    async logoutUser({ commit }, router) { // Receive the router instance as the second argument\n        try {\n            const response = await fetch('http://192.168.1.228:5000/logout', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                credentials: 'include',\n            });\n\n            if (response.ok) {\n                console.log('Logout successful on the server (optional)');\n            } else {\n                console.error('Error during server-side logout (optional)');\n            }\n        } catch (error) {\n            console.error('Error during logout API call:', error);\n        } finally {\n            console.log('logoutUser: About to remove jwt_token cookie');\n            Cookies.remove('jwt_token', { path: '/' });\n            console.log('logoutUser: jwt_token cookie removed');\n            commit('clearGreenhouseUser');\n            router.push('/login');\n        }\n    },\n    async loadUserFromToken({ commit }) {\n        console.log('loadUserFromToken action is executing!');\n        const token = Cookies.get('jwt_token');\n        console.log('loadUserFromToken: jwt_token cookie value:', token);\n        if (token) {\n            try {\n                const response = await fetch('http://192.168.1.228:5000/verify-token', {\n                    method: 'POST',\n                    credentials: 'include',\n                });\n\n                if (response.ok) {\n                    const userData = await response.json();\n                    console.log('User data from /verify-token:', userData);\n                    commit('setGreenhouseUser', userData);\n                } else {\n                    Cookies.remove('jwt_token', { path: '/' }); // Remove invalid token\n                    commit('clearGreenhouseUser');\n                    console.log('Token verification failed');\n                }\n            } catch (error) {\n                console.error('Error verifying token:', error);\n                Cookies.remove('jwt_token', { path: '/' });  // Remove on error\n                commit('clearGreenhouseUser');\n            }\n        } else {\n            console.log('jwt_token cookie not found');\n        }\n    },\n};\n"],"mappings":";AAAA,OAAOA,OAAO,MAAM,WAAW;AAE/B,eAAe;EACXC,SAASA,CAAC;IAAEC;EAAO,CAAC,EAAEC,QAAQ,EAAE;IAC5BD,MAAM,CAAC,mBAAmB,EAAEC,QAAQ,CAAC;IACrCC,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEF,QAAQ,CAAC;IAC9DC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,QAAQ,CAACG,UAAU,CAAC;IAC/CF,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,QAAQ,CAACI,SAAS,CAAC;IAC7CH,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,QAAQ,CAACK,IAAI,CAAC;EACvC,CAAC;EACD,MAAMC,UAAUA,CAAC;IAAEP;EAAO,CAAC,EAAEQ,MAAM,EAAE;IAAE;IACnC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,WAAW,EAAE;MACjB,CAAC,CAAC;MAEF,IAAIJ,QAAQ,CAACK,EAAE,EAAE;QACbZ,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;MAC7D,CAAC,MAAM;QACHD,OAAO,CAACa,KAAK,CAAC,4CAA4C,CAAC;MAC/D;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZb,OAAO,CAACa,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACzD,CAAC,SAAS;MACNb,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC;MAC3DL,OAAO,CAACkB,MAAM,CAAC,WAAW,EAAE;QAAEC,IAAI,EAAE;MAAI,CAAC,CAAC;MAC1Cf,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;MACnDH,MAAM,CAAC,qBAAqB,CAAC;MAC7BQ,MAAM,CAACU,IAAI,CAAC,QAAQ,CAAC;IACzB;EACJ,CAAC;EACD,MAAMC,iBAAiBA,CAAC;IAAEnB;EAAO,CAAC,EAAE;IAChCE,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;IACrD,MAAMiB,KAAK,GAAGtB,OAAO,CAACuB,GAAG,CAAC,WAAW,CAAC;IACtCnB,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEiB,KAAK,CAAC;IAChE,IAAIA,KAAK,EAAE;MACP,IAAI;QACA,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;UACnEC,MAAM,EAAE,MAAM;UACdE,WAAW,EAAE;QACjB,CAAC,CAAC;QAEF,IAAIJ,QAAQ,CAACK,EAAE,EAAE;UACb,MAAMb,QAAQ,GAAG,MAAMQ,QAAQ,CAACa,IAAI,CAAC,CAAC;UACtCpB,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,QAAQ,CAAC;UACtDD,MAAM,CAAC,mBAAmB,EAAEC,QAAQ,CAAC;QACzC,CAAC,MAAM;UACHH,OAAO,CAACkB,MAAM,CAAC,WAAW,EAAE;YAAEC,IAAI,EAAE;UAAI,CAAC,CAAC,CAAC,CAAC;UAC5CjB,MAAM,CAAC,qBAAqB,CAAC;UAC7BE,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;QAC5C;MACJ,CAAC,CAAC,OAAOY,KAAK,EAAE;QACZb,OAAO,CAACa,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9CjB,OAAO,CAACkB,MAAM,CAAC,WAAW,EAAE;UAAEC,IAAI,EAAE;QAAI,CAAC,CAAC,CAAC,CAAE;QAC7CjB,MAAM,CAAC,qBAAqB,CAAC;MACjC;IACJ,CAAC,MAAM;MACHE,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC7C;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}