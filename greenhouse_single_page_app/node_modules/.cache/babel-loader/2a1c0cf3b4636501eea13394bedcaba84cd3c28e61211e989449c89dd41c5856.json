{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Cookies from 'js-cookie'; // If you're using js-cookie\nimport router from '../../router'; // Assuming your router instance is in src/router/index.js\n\nexport default {\n  loginUser({\n    commit\n  }, userData) {\n    commit('setGreenhouseUser', userData);\n  },\n  async logoutUser({\n    commit\n  }) {\n    try {\n      //       // Optional: Call your Flask server's logout endpoint\n      const response = await fetch('http://192.168.1.228:5000/logout', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include' // Crucial line for sending cookies\n      });\n      if (response.ok) {\n        console.log('Logout successful on the server (optional)');\n      } else {\n        console.error('Error during server-side logout (optional)');\n        // Handle potential errors from the server\n      }\n    } catch (error) {\n      console.error('Error during logout API call:', error);\n      // Handle network errors or other issues\n    } finally {\n      // Clear the JWT cookie\n      Cookies.remove('jwt_token', {\n        path: '/'\n      }); // Replace 'your_jwt_cookie_name' with the actual name of your JWT cookie\n\n      // Clear the user data in Vuex state\n      commit('clearGreenhouseUser');\n\n      // Redirect the user to the login page\n      router.push('/login'); // Adjust the route as needed\n    }\n  }\n};","map":{"version":3,"names":["Cookies","router","loginUser","commit","userData","logoutUser","response","fetch","method","headers","credentials","ok","console","log","error","remove","path","push"],"sources":["/home/alex/dev/GreenHouse/greenhouse_single_page_app/src/store/authenticate/actions.js"],"sourcesContent":["import Cookies from 'js-cookie'; // If you're using js-cookie\nimport router from '../../router'; // Assuming your router instance is in src/router/index.js\n\nexport default {\n    loginUser({ commit }, userData) {\n        commit('setGreenhouseUser', userData);\n\n    },\n     async logoutUser({ commit }) {\n        try {\n    //       // Optional: Call your Flask server's logout endpoint\n            const response = await fetch('http://192.168.1.228:5000/logout', { \n                method: 'POST',\n                headers: {\n                'Content-Type': 'application/json',\n                },\n                credentials: 'include', // Crucial line for sending cookies\n            });\n    \n          if (response.ok) {\n            console.log('Logout successful on the server (optional)');\n          } else {\n            console.error('Error during server-side logout (optional)');\n            // Handle potential errors from the server\n          }\n        } catch (error) {\n          console.error('Error during logout API call:', error);\n          // Handle network errors or other issues\n        } finally {\n          // Clear the JWT cookie\n          Cookies.remove('jwt_token', { path: '/' }); // Replace 'your_jwt_cookie_name' with the actual name of your JWT cookie\n    \n          // Clear the user data in Vuex state\n          commit('clearGreenhouseUser');\n          \n    \n          // Redirect the user to the login page\n          router.push('/login'); // Adjust the route as needed\n        }\n      },\n};"],"mappings":";AAAA,OAAOA,OAAO,MAAM,WAAW,CAAC,CAAC;AACjC,OAAOC,MAAM,MAAM,cAAc,CAAC,CAAC;;AAEnC,eAAe;EACXC,SAASA,CAAC;IAAEC;EAAO,CAAC,EAAEC,QAAQ,EAAE;IAC5BD,MAAM,CAAC,mBAAmB,EAAEC,QAAQ,CAAC;EAEzC,CAAC;EACA,MAAMC,UAAUA,CAAC;IAAEF;EAAO,CAAC,EAAE;IAC1B,IAAI;MACR;MACQ,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACT,cAAc,EAAE;QAChB,CAAC;QACDC,WAAW,EAAE,SAAS,CAAE;MAC5B,CAAC,CAAC;MAEJ,IAAIJ,QAAQ,CAACK,EAAE,EAAE;QACfC,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;MAC3D,CAAC,MAAM;QACLD,OAAO,CAACE,KAAK,CAAC,4CAA4C,CAAC;QAC3D;MACF;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC,SAAS;MACR;MACAd,OAAO,CAACe,MAAM,CAAC,WAAW,EAAE;QAAEC,IAAI,EAAE;MAAI,CAAC,CAAC,CAAC,CAAC;;MAE5C;MACAb,MAAM,CAAC,qBAAqB,CAAC;;MAG7B;MACAF,MAAM,CAACgB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IACzB;EACF;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}