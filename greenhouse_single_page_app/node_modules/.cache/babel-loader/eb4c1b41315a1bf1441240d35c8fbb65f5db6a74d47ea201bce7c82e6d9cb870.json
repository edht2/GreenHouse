{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions } from 'vuex';\nexport default {\n  data() {\n    return {\n      loginForm: {\n        email: '',\n        password: ''\n      },\n      errorMessage: '',\n      loading: false\n    };\n  },\n  methods: {\n    ...mapActions('authenticate', ['loginUser']),\n    async handleLogin() {\n      this.loading = true;\n      this.errorMessage = ''; // Clear previous errors\n      try {\n        const response = await fetch('http://192.168.1.228:5000/login', {\n          //ensure this is the correct address.\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(this.loginForm),\n          credentials: 'include' // Crucial line for sending cookies\n        });\n        const data = await response.json();\n        if (response.ok) {\n          const userData = {\n            firstName: data.first_name,\n            lastName: data.last_ame,\n            role: data.role\n          };\n          this.loginUser(userData);\n          this.$router.push('/greenhouse');\n        } else {\n          this.errorMessage = data.message || 'Login failed. Please check your credentials.';\n        }\n      } catch (error) {\n        this.errorMessage = 'Network error. Please try again laterzz.';\n        console.error('Login error:', error);\n      } finally {\n        this.loading = false;\n      }\n    }\n  },\n  created() {\n    this.$router = useRouter();\n  }\n};","map":{"version":3,"names":["mapActions","data","loginForm","email","password","errorMessage","loading","methods","handleLogin","response","fetch","method","headers","body","JSON","stringify","credentials","json","ok","userData","firstName","first_name","lastName","last_ame","role","loginUser","$router","push","message","error","console","created","useRouter"],"sources":["/home/alex/dev/GreenHouse/greenhouse_single_page_app/src/pages/authenticate/TheLogin.vue"],"sourcesContent":["<template>\n    <div class=\"login-container\">\n      <div class=\"login-form\">\n        <h2>Login</h2>\n        <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\n        <form @submit.prevent=\"handleLogin\">\n          <div class=\"form-group\">\n            <label for=\"email\">Email:</label>\n            <input type=\"email\" id=\"email\" v-model=\"loginForm.email\" required />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password:</label>\n            <input type=\"password\" id=\"password\" v-model=\"loginForm.password\" required />\n          </div>\n          <button type=\"submit\" :disabled=\"loading\">\n            <span v-if=\"loading\">Loading...</span>\n            <span v-else>Login</span>\n          </button>\n        </form>\n        <p>\n          Don't have an account? <router-link to=\"/register\">Register</router-link>\n        </p>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import { mapActions } from 'vuex';\n\n  \n  export default {\n    data() {\n      return {\n        loginForm: {\n          email: '',\n          password: '',\n        },\n        errorMessage: '',\n        loading: false,\n      };\n    },\n    methods: {\n      ...mapActions('authenticate', ['loginUser']),\n      async handleLogin() {\n        this.loading = true;\n        this.errorMessage = ''; // Clear previous errors\n        try {\n          const response = await fetch('http://192.168.1.228:5000/login', { //ensure this is the correct address.\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(this.loginForm),\n            credentials: 'include', // Crucial line for sending cookies\n          });\n  \n          const data = await response.json();\n  \n          if (response.ok) {\n            const userData = {\n              firstName: data.first_name,\n              lastName: data.last_ame,\n              role: data.role,\n            };\n            this.loginUser(userData);\n            this.$router.push('/greenhouse');\n          } else {\n            this.errorMessage = data.message || 'Login failed. Please check your credentials.';\n          }\n        } catch (error) {\n          this.errorMessage = 'Network error. Please try again laterzz.';\n          console.error('Login error:', error);\n        } finally {\n          this.loading = false;\n        }\n      },\n    },\n    created() {\n      this.$router = useRouter();\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .login-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    background-color: #f4f4f4;\n  }\n  \n  .login-form {\n    width: 300px;\n    padding: 20px;\n    background-color: white;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  }\n  \n  .form-group {\n    margin-bottom: 15px;\n  }\n  \n  label {\n    display: block;\n    margin-bottom: 5px;\n  }\n  \n  input {\n    width: 100%;\n    padding: 8px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n  }\n  \n  button {\n    width: 100%;\n    padding: 10px;\n    background-color: #007bff;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n  }\n  \n  button:disabled {\n    background-color: #ccc;\n    cursor: not-allowed;\n  }\n  \n  .error-message {\n    color: red;\n    margin-bottom: 10px;\n  }\n  \n  p {\n    text-align: center;\n    margin-top: 15px;\n  }\n  </style>"],"mappings":";AA2BE,SAASA,UAAS,QAAS,MAAM;AAGjC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACZ,CAAC;MACDC,YAAY,EAAE,EAAE;MAChBC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,GAAGP,UAAU,CAAC,cAAc,EAAE,CAAC,WAAW,CAAC,CAAC;IAC5C,MAAMQ,WAAWA,CAAA,EAAG;MAClB,IAAI,CAACF,OAAM,GAAI,IAAI;MACnB,IAAI,CAACD,YAAW,GAAI,EAAE,EAAE;MACxB,IAAI;QACF,MAAMI,QAAO,GAAI,MAAMC,KAAK,CAAC,iCAAiC,EAAE;UAAE;UAChEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACb,SAAS,CAAC;UACpCc,WAAW,EAAE,SAAS,CAAE;QAC1B,CAAC,CAAC;QAEF,MAAMf,IAAG,GAAI,MAAMQ,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAElC,IAAIR,QAAQ,CAACS,EAAE,EAAE;UACf,MAAMC,QAAO,GAAI;YACfC,SAAS,EAAEnB,IAAI,CAACoB,UAAU;YAC1BC,QAAQ,EAAErB,IAAI,CAACsB,QAAQ;YACvBC,IAAI,EAAEvB,IAAI,CAACuB;UACb,CAAC;UACD,IAAI,CAACC,SAAS,CAACN,QAAQ,CAAC;UACxB,IAAI,CAACO,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;QAClC,OAAO;UACL,IAAI,CAACtB,YAAW,GAAIJ,IAAI,CAAC2B,OAAM,IAAK,8CAA8C;QACpF;MACF,EAAE,OAAOC,KAAK,EAAE;QACd,IAAI,CAACxB,YAAW,GAAI,0CAA0C;QAC9DyB,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACtC,UAAU;QACR,IAAI,CAACvB,OAAM,GAAI,KAAK;MACtB;IACF;EACF,CAAC;EACDyB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACL,OAAM,GAAIM,SAAS,CAAC,CAAC;EAC5B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}