{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport store from './store/index.js'; // Import your Vuex store\n\nimport TheLogin from './pages/authenticate/TheLogin.vue';\nconsole.log('TheLogin:', TheLogin);\nimport TheRegister from './pages/authenticate/TheRegister.vue';\nimport TheCalendar from './pages/garden/TheCalendar.vue';\nimport TheLocations from './pages/garden/TheLocations.vue';\nimport ToDoList from './pages/garden/ToDoList.vue';\nimport ActuatorTest from './pages/greenhouse/ActuatorTest.vue';\nimport GhSummary from './pages/greenhouse/GhSummary.vue';\nimport GhDrillDown from './pages/greenhouse/GhDrillDown.vue';\nimport SensorStatus from './pages/greenhouse/SensorStatus.vue';\nimport HomePage from './pages/HomePage.vue';\nimport NotFound from './pages/NotFound.vue';\nconst router = createRouter({\n  history: createWebHistory(),\n  routes: [{\n    path: '/',\n    component: HomePage\n  }, {\n    path: '/greenhouse',\n    component: GhSummary,\n    beforeEnter: (to, from, next) => {\n      if (store.getters['authenticate/isLoggedIn']) {\n        next();\n      } else {\n        next('/login');\n      }\n    }\n  }, {\n    path: '/greenhouse/drilldown/:dataLabel',\n    name: 'drilldownDetail',\n    component: GhDrillDown,\n    props: true,\n    beforeEnter: (to, from, next) => {\n      if (store.getters['authenticate/isLoggedIn']) {\n        next();\n      } else {\n        next('/login');\n      }\n    }\n  }, {\n    path: '/register',\n    component: TheRegister\n  }, {\n    path: '/login',\n    component: TheLogin\n  }, {\n    path: '/calendar',\n    component: TheCalendar,\n    beforeEnter: (to, from, next) => {\n      if (store.getters['authenticate/isLoggedIn']) {\n        next();\n      } else {\n        next('/login');\n      }\n    }\n  }, {\n    path: '/locations',\n    component: TheLocations,\n    beforeEnter: (to, from, next) => {\n      if (store.getters['authenticate/isLoggedIn']) {\n        next();\n      } else {\n        next('/login');\n      }\n    }\n  }, {\n    path: '/todo',\n    component: ToDoList,\n    beforeEnter: (to, from, next) => {\n      if (store.getters['authenticate/isLoggedIn']) {\n        next();\n      } else {\n        next('/login');\n      }\n    }\n  }, {\n    path: '/sensorstatus',\n    component: SensorStatus,\n    beforeEnter: (to, from, next) => {\n      if (store.getters['authenticate/isLoggedIn']) {\n        next();\n      } else {\n        next('/login');\n      }\n    }\n  }, {\n    path: '/actuatortest',\n    component: ActuatorTest,\n    beforeEnter: (to, from, next) => {\n      if (store.getters['authenticate/isLoggedIn']) {\n        next();\n      } else {\n        next('/login');\n      }\n    }\n  }, {\n    path: '/:notFound(.*)',\n    component: NotFound\n  }]\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","store","TheLogin","console","log","TheRegister","TheCalendar","TheLocations","ToDoList","ActuatorTest","GhSummary","GhDrillDown","SensorStatus","HomePage","NotFound","router","history","routes","path","component","beforeEnter","to","from","next","getters","name","props"],"sources":["/home/alex/dev/GreenHouse/greenhouse_single_page_app/src/router.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\nimport store from './store/index.js'; // Import your Vuex store\n\nimport TheLogin from './pages/authenticate/TheLogin.vue';\nconsole.log('TheLogin:', TheLogin);\nimport TheRegister from './pages/authenticate/TheRegister.vue';\nimport TheCalendar from './pages/garden/TheCalendar.vue';\nimport TheLocations from './pages/garden/TheLocations.vue';\nimport ToDoList from './pages/garden/ToDoList.vue';\nimport ActuatorTest from './pages/greenhouse/ActuatorTest.vue';\nimport GhSummary from './pages/greenhouse/GhSummary.vue';\nimport GhDrillDown from './pages/greenhouse/GhDrillDown.vue';\nimport SensorStatus from './pages/greenhouse/SensorStatus.vue';\nimport HomePage from './pages/HomePage.vue';\nimport NotFound from './pages/NotFound.vue';\n\nconst router = createRouter({\n    history: createWebHistory(),\n    routes: [\n        { path: '/', component: HomePage },\n        {\n            path: '/greenhouse',\n            component: GhSummary,\n            beforeEnter: (to, from, next) => {\n                if (store.getters['authenticate/isLoggedIn']) {\n                    next();\n                } else {\n                    next('/login');\n                }\n            },\n        },\n        {\n            path: '/greenhouse/drilldown/:dataLabel',\n            name: 'drilldownDetail',\n            component: GhDrillDown,\n            props: true,\n            beforeEnter: (to, from, next) => {\n                if (store.getters['authenticate/isLoggedIn']) {\n                    next();\n                } else {\n                    next('/login');\n                }\n            },\n        },\n        { path: '/register', component: TheRegister },\n        { path: '/login', component: TheLogin },\n        {\n            path: '/calendar',\n            component: TheCalendar,\n            beforeEnter: (to, from, next) => {\n                if (store.getters['authenticate/isLoggedIn']) {\n                    next();\n                } else {\n                    next('/login');\n                }\n            },\n        },\n        {\n            path: '/locations',\n            component: TheLocations,\n            beforeEnter: (to, from, next) => {\n                if (store.getters['authenticate/isLoggedIn']) {\n                    next();\n                } else {\n                    next('/login');\n                }\n            },\n        },\n        {\n            path: '/todo',\n            component: ToDoList,\n            beforeEnter: (to, from, next) => {\n                if (store.getters['authenticate/isLoggedIn']) {\n                    next();\n                } else {\n                    next('/login');\n                }\n            },\n        },\n        {\n            path: '/sensorstatus',\n            component: SensorStatus,\n            beforeEnter: (to, from, next) => {\n                if (store.getters['authenticate/isLoggedIn']) {\n                    next();\n                } else {\n                    next('/login');\n                }\n            },\n        },\n        {\n            path: '/actuatortest',\n            component: ActuatorTest,\n            beforeEnter: (to, from, next) => {\n                if (store.getters['authenticate/isLoggedIn']) {\n                    next();\n                } else {\n                    next('/login');\n                }\n            },\n        },\n        { path: '/:notFound(.*)', component: NotFound },\n    ],\n});\n\nexport default router;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}